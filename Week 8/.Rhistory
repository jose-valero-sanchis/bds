tinytex::install_tinytex()
library(tinytex)
tlmgr_install('colortbl.sty')
tinytex::uninstall_tinytex()
tinytex::install_tinytex()
tinytex::uninstall_tinytex()
tinytex::uninstall_tinytex()
tinytex::install_tinytex()
library(tinytex)
tlmgr_install('colortbl.sty')
tlmgr_install('graphics')
BackTrackingLocal <- function(trellisBT, decisionf=max)
{
trellis <- trellisBT$trellis
backi <- trellisBT$backi
backj <- trellisBT$backj
#busqueda de la posicion con el valor mayor o menor
pos <- which(trellis==decisionf(trellis), arr.ind=TRUE)[1,]
#print(pos)
while (pos[1]!=1 & pos[2]!=1)
{
i <- pos[1]
j <- pos[2]
inew <- backi[i,j]
jnew <- backj[i,j]
cat(i-1,",",j-1," <- \t", inew-1,",",jnew-1,":\t",sep="")
if(inew==i-1 & jnew==j-1)
{
cat(trellis[i,j],"MoS\t", rownames(trellis)[i],colnames(trellis)[j],"\n")
}
else if(inew==i & jnew==j-1) #insercion de v[j]
{
cat(trellis[i,j],"I\t", "-",colnames(trellis)[j],"\n")
}
else if(inew==i-1 & jnew==j) #borrado de u[i]
{
cat(trellis[i,j],"B\t", rownames(trellis)[i],"-","\n")
}
else if(inew==1 & jnew==1)
{
cat(trellis[i,j],"Ini\t","\n")
}
posNew <- c(inew,jnew)
pos <- posNew
}
#cat(pos[1],pos[2],"\n")
}
t12sw <- SmithWaterman(seq1,seq2,delta)
source("~/Downloads/practica/clinicalPathwaysAligment_by_DynamicProgramming_SolutionJMGG.R")
setwd("~/Downloads/LAB6_BDS_DataQuality")
# IMPORTANT! -> For the development of the practice on your computers, remove the parameter 'eval = FALSE' from the following line).
knitr::opts_chunk$set(echo = TRUE, message = FALSE)
library("zoo")
library("rts")
library("plotly")
library("datacheck")
library("devtools")
install.packages("zoo", repos = "http://cran.us.r-project.org")
install.packages("rts", repos = "http://cran.us.r-project.org")
install.packages("plotly", repos = "http://cran.us.r-project.org")
install.packages("devtools", repos = "http://cran.us.r-project.org")
# IMPORTANT! -> For the development of the practice on your computers, remove the parameter 'eval = FALSE' from the following line).
knitr::opts_chunk$set(echo = TRUE, message = FALSE)
library("devtools")
install.packages("zoo", repos = "http://cran.us.r-project.org")
install.packages("rts", repos = "http://cran.us.r-project.org")
install.packages("plotly", repos = "http://cran.us.r-project.org")
install.packages("devtools", repos = "http://cran.us.r-project.org")
# IMPORTANT! -> For the development of the practice on your computers, remove the parameter 'eval = FALSE' from the following line).
knitr::opts_chunk$set(echo = TRUE, message = FALSE)
library("zoo")
library("rts")
library("plotly")
library("datacheck")
library("devtools")
devtools::install_github('c5sire/datacheck')
devtools::install_github("hms-dbmi/EHRtemporalVariability")
library("zoo")
library("rts")
library("plotly")
library("datacheck")
library("EHRtemporalVariability")
setwd(".")
library("devtools")
# IMPORTANT! -> For the development of the practice on your computers, remove the parameter 'eval = FALSE' from the following line).
knitr::opts_chunk$set(echo = TRUE, message = FALSE, eval = FALSE)
getwd()
setwd(".")
library("devtools")
install.packages("zoo", repos = "http://cran.us.r-project.org")
install.packages("rts", repos = "http://cran.us.r-project.org")
install.packages("plotly", repos = "http://cran.us.r-project.org")
install.packages("devtools", repos = "http://cran.us.r-project.org")
install.packages("plotly", repos = "http://cran.us.r-project.org")
install.packages("devtools", repos = "http://cran.us.r-project.org")
library("devtools")
install.packages("usethis")
library("devtools")
library(usethis)
library("usethis")
library("devtools")
